openapi: 3.0.0
info:
  title: users
  version: '1.0'
servers:
  - url: 'http://localhost:8000/api'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the infromation of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /users:
    post:
      summary: Register / 회원가입
      operationId: post-user
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Missing Required Information
        '409':
          description: Username Already Taken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationPayload'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    parameters: []
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples: {}
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        name:
          type: string
        phone:
          type: string
        type:
          type: string
        email_authenticated:
          type: string
        email_token:
          type: string
        school:
          type: string
        grade:
          type: string
        recently_searched:
          type: string
        interested_majors:
          type: string
        payments:
          type: string
        books:
          type: string
        provider:
          type: string
        provided_data:
          type: string
        created:
          type: string
        updated:
          type: string
        deleted:
          type: string
        drop_out_reasons:
          type: string
        marketing_agreed:
          type: string
        route:
          type: string
        position:
          type: string
        interested_categories:
          type: string
        gender:
          type: string
        is_staff:
          type: string
      required:
        - username
        - password
    RegistrationPayload:
      title: RegistrationPayload
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        type:
          type: string
        school_id:
          type: string
        grade:
          type: string
        provider:
          type: string
        provided_data:
          type: string
        route:
          type: string
        position:
          type: string
        interested_categories:
          type: string
        gender:
          type: string
        marketingAgreed:
          type: string
